# ============================================
# ShiftMaster - Docker Compose 本番環境構成
# PostgreSQL + Nginx + Redis + Django
# ============================================

version: "3.8"

services:
  # === Database Service ===
  db:
    image: postgres:15-alpine
    container_name: shiftmaster_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-shiftmaster}
      POSTGRES_USER: ${POSTGRES_USER:-shiftmaster_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-md5}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - shiftmaster_network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-shiftmaster_user} -d ${POSTGRES_DB:-shiftmaster}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # === Redis Service (Session & Cache) ===
  redis:
    image: redis:7-alpine
    container_name: shiftmaster_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password_123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - shiftmaster_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # === Django Web Application ===
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: shiftmaster_web
    restart: unless-stopped
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-in-production}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-shiftmaster_user}:${POSTGRES_PASSWORD:-secure_password_123}@db:5432/${POSTGRES_DB:-shiftmaster}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password_123}@redis:6379/1
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,0.0.0.0}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-http://localhost:8000,http://127.0.0.1:8000}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - shiftmaster_network
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import requests; requests.get('http://localhost:8000/', timeout=10)",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # === Nginx Reverse Proxy ===
  nginx:
    image: nginx:alpine
    container_name: shiftmaster_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/var/www/static:ro
      - media_volume:/var/www/media:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - web
    networks:
      - shiftmaster_network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/health/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # === Celery Worker (Background Tasks) ===
  celery:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: shiftmaster_celery
    restart: unless-stopped
    command: celery -A shiftmaster worker --loglevel=info
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-in-production}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-shiftmaster_user}:${POSTGRES_PASSWORD:-secure_password_123}@db:5432/${POSTGRES_DB:-shiftmaster}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password_123}@redis:6379/1
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - shiftmaster_network

  # === Celery Beat (Scheduled Tasks) ===
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: shiftmaster_celery_beat
    restart: unless-stopped
    command: celery -A shiftmaster beat --loglevel=info
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-in-production}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-shiftmaster_user}:${POSTGRES_PASSWORD:-secure_password_123}@db:5432/${POSTGRES_DB:-shiftmaster}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password_123}@redis:6379/1
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - shiftmaster_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  shiftmaster_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
